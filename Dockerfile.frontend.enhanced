# Multi-stage build for React frontend
# Stage 1: Build the application
FROM node:20-alpine as builder

WORKDIR /app

# Copy package files
COPY package*.json ./

# Install dependencies
RUN npm ci --legacy-peer-deps

# Copy source code
COPY . .

# Build arguments for environment variables
ARG VITE_PROXY_SERVER_URL
ARG VITE_BACKEND_URL
ARG VITE_USE_REAL_APIS=true
ARG VITE_ENABLE_API_CACHE=true
ARG VITE_CACHE_TTL=30
ARG VITE_API_RATE_LIMIT=60

# Set environment variables for build
ENV VITE_PROXY_SERVER_URL=$VITE_PROXY_SERVER_URL
ENV VITE_BACKEND_URL=$VITE_BACKEND_URL
ENV VITE_USE_REAL_APIS=$VITE_USE_REAL_APIS
ENV VITE_ENABLE_API_CACHE=$VITE_ENABLE_API_CACHE
ENV VITE_CACHE_TTL=$VITE_CACHE_TTL
ENV VITE_API_RATE_LIMIT=$VITE_API_RATE_LIMIT

# Build the application
RUN npm run build

# Stage 2: Serve with nginx
FROM nginx:alpine

# Copy custom nginx config
COPY nginx/frontend-standalone.conf /etc/nginx/conf.d/default.conf

# Copy built files from builder stage
COPY --from=builder /app/dist /usr/share/nginx/html

# Create nginx cache directory
RUN mkdir -p /var/cache/nginx

# Add health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
    CMD wget --quiet --tries=1 --spider http://localhost:80/ || exit 1

# Expose port
EXPOSE 80

# Start nginx
CMD ["nginx", "-g", "daemon off;"]
