=================================================================
🌐 UNIVERSAL API - QUICK COMMAND REFERENCE
=================================================================

📋 QUICK START (3 STEPS):
-------------------------------------------------------------------
1. npm run dev
2. Open browser to http://localhost:5173
3. Press F12 → Console tab
4. Run: await universalAPITester.quickTest()

=================================================================
⚡ QUICK TEST COMMANDS
=================================================================

# Test all APIs (30 seconds)
await universalAPITester.quickTest()

# Expected output:
# ✅ Market Data: Working
# ✅ Sentiment: Working
# ✅ News: Working
# 🎯 Results: 3/3 tests passed

-------------------------------------------------------------------

=================================================================
🧪 COMPREHENSIVE TESTS
=================================================================

# Run full test suite (2 minutes)
await universalAPITester.runAllTests()

# Test specific categories:
await universalAPITester.testMarketData()      # CoinMarketCap, CoinGecko, CryptoCompare
await universalAPITester.testSentiment()       # Fear & Greed, Social Metrics
await universalAPITester.testNews()            # NewsAPI, CryptoPanic
await universalAPITester.testWhaleTracking()   # Whale Alert, Etherscan
await universalAPITester.testIntegratedService() # All services combined

-------------------------------------------------------------------

=================================================================
📊 USAGE EXAMPLES
=================================================================

# Get market data for multiple coins
const prices = await integratedDataService.getMarketData(['BTC', 'ETH', 'BNB']);
console.log(prices);

# Get Fear & Greed Index
const sentiment = await integratedDataService.getFearGreedIndex();
console.log(sentiment.value, sentiment.classification);

# Get comprehensive sentiment data
const sentimentData = await integratedDataService.getSentimentData();
console.log(sentimentData);

# Get crypto news
const news = await integratedDataService.getNews(20);
console.log(news);

# Get whale transactions
const whales = await integratedDataService.getWhaleActivity(1000000);
console.log(whales);

# Get historical data
const history = await integratedDataService.getHistoricalData('BTC', 30);
console.log(history);

# Get ALL data at once (parallel fetch)
const allData = await integratedDataService.getAllData();
console.log(allData);

-------------------------------------------------------------------

=================================================================
📈 METRICS & MONITORING
=================================================================

# View API usage statistics
universalAPITester.showMetrics()

# Output shows:
# - Total requests
# - Success rate
# - Average response time
# - Provider statistics (which APIs were used)

# Clear metrics
universalAPITester.clearMetrics()

# Get detailed metrics
const metrics = universalAPIService.getMetrics();
console.table(metrics);

# Get metrics summary
const summary = universalAPIService.getMetricsSummary();
console.log(summary);

-------------------------------------------------------------------

=================================================================
🎯 DIRECT UNIVERSAL API SERVICE CALLS
=================================================================

# Market data
await universalAPIService.getCryptoPrices(['BTC', 'ETH', 'BNB'])
await universalAPIService.getHistoricalData('BTC', 30)

# Sentiment & Social
await universalAPIService.getFearGreedIndex()
await universalAPIService.getSocialMetrics('BTC')

# News
await universalAPIService.getCryptoNews(20)

# Whale tracking
await universalAPIService.getWhaleTransactions(1000000)

-------------------------------------------------------------------

=================================================================
🔍 DIAGNOSTICS & TROUBLESHOOTING
=================================================================

# Check if Universal API is loaded
console.log(typeof universalAPITester !== 'undefined' ? '✅ Loaded' : '❌ Not loaded')

# Check network connectivity
console.log(navigator.onLine ? '✅ Online' : '❌ Offline')

# Run full diagnostics
await troubleshoot.diagnose()

# Check which providers are working
const summary = universalAPIService.getMetricsSummary();
console.table(summary.providerStats);

# Find failed requests
const metrics = universalAPIService.getMetrics();
const failed = metrics.filter(m => !m.success);
console.log(`Failed requests: ${failed.length}`);
console.table(failed);

-------------------------------------------------------------------

=================================================================
📚 AVAILABLE PROVIDERS BY CATEGORY
=================================================================

📊 MARKET DATA:
- CoinMarketCap (Primary)
- CryptoCompare (Fallback)
- CoinGecko (Fallback)
- CoinAPI.io
- Nomics
- Messari

😊 SENTIMENT & SOCIAL:
- Fear & Greed Index (Primary)
- LunarCrush
- CoinGecko Community
- Reddit
- Twitter

📰 NEWS:
- NewsAPI (Primary)
- CryptoPanic (Fallback)
- CryptoControl
- CoinDesk

🐋 WHALE TRACKING:
- Whale Alert (Primary)
- Etherscan (Fallback)
- BscScan (Fallback)

🔗 BLOCKCHAIN EXPLORERS:
- TronScan
- BscScan
- Etherscan
- TronGrid
- AnkrScan

-------------------------------------------------------------------

=================================================================
🎨 SUCCESS CRITERIA
=================================================================

Your Universal APIs are working if:

✅ universalAPITester.quickTest() passes (3/3)
✅ Success rate >90% (check metrics)
✅ Avg response time <2000ms
✅ At least 3 different providers used
✅ No critical errors in console

-------------------------------------------------------------------

=================================================================
💡 BEST PRACTICES
=================================================================

1. USE INTEGRATED SERVICE (recommended):
   ✅ const data = await integratedDataService.getMarketData(['BTC']);
   ❌ const data = await fetch('https://api.coinmarketcap.com/...');

2. HANDLE ERRORS GRACEFULLY:
   try {
     const data = await integratedDataService.getAllData();
   } catch (error) {
     console.warn('Using cached/default data');
   }

3. FETCH IN PARALLEL:
   ✅ Promise.all([getData1(), getData2(), getData3()])
   ❌ await getData1(); await getData2(); await getData3()

4. MONITOR METRICS:
   setInterval(() => {
     const metrics = universalAPIService.getMetricsSummary();
     console.log('Success rate:', metrics.successRate);
   }, 60000);

-------------------------------------------------------------------

=================================================================
⚙️ CONFIGURATION
=================================================================

All API keys in: src/config/apiConfig.ts

Structure:
API_CONFIG = {
  marketData: { coinmarketcap: {...}, cryptocompare: {...}, ... },
  sentiment: { fearGreed: {...}, lunarcrush: {...}, ... },
  news: { newsapi: {...}, cryptopanic: {...}, ... },
  whale: { whaleAlert: {...}, etherscan: {...}, ... },
  blockchain: { tronscan: {...}, bscscan: {...}, ... }
}

Each provider has:
- name: Provider identifier
- baseUrl: API endpoint
- key: API key (if required)
- timeout: Request timeout
- priority: Fallback order (1 = highest)

-------------------------------------------------------------------

=================================================================
🚨 TROUBLESHOOTING QUICK FIXES
=================================================================

ISSUE: universalAPITester is not defined
FIX: Wait 2 seconds for utilities to load
     await new Promise(r => setTimeout(r, 2000))
     await universalAPITester.quickTest()

ISSUE: All APIs failing
FIX: Check network
     console.log(navigator.onLine)
     await troubleshoot.diagnose()

ISSUE: Slow response times
FIX: Check metrics to find slow providers
     universalAPITester.showMetrics()
     Look for avgDuration > 3000ms

ISSUE: Rate limiting errors
FIX: Check rate limit status
     const metrics = universalAPIService.getMetrics();
     const rateLimited = metrics.filter(m => m.error?.includes('rate limit'));
     console.log('Rate limited:', rateLimited.length);

-------------------------------------------------------------------

=================================================================
📖 DOCUMENTATION FILES
=================================================================

UNIVERSAL_API_GUIDE.md       - Complete guide with examples
UNIVERSAL_API_COMMANDS.txt   - This file (quick reference)
API_FIXES_SUMMARY.md         - Original API fixes
TEST_NOW.md                  - Testing instructions
START_TESTING_HERE.md        - Getting started guide

-------------------------------------------------------------------

=================================================================
🎉 COMPLETE TEST SEQUENCE
=================================================================

Copy & paste this complete validation:

(async () => {
  console.log('🚀 Starting Universal API validation...\n');
  
  // Quick test
  console.log('1️⃣ Quick Test:');
  await universalAPITester.quickTest();
  
  // Full tests
  console.log('\n2️⃣ Comprehensive Tests:');
  await universalAPITester.runAllTests();
  
  // Metrics
  console.log('\n3️⃣ Final Metrics:');
  universalAPITester.showMetrics();
  
  console.log('\n✅ VALIDATION COMPLETE!');
})();

-------------------------------------------------------------------

=================================================================
END OF QUICK REFERENCE
=================================================================

🚀 Start with: await universalAPITester.quickTest()
📚 Full guide: Open UNIVERSAL_API_GUIDE.md
🆘 Help: troubleshoot.help()

=================================================================
