# Prometheus Configuration for Crepto AI
global:
  scrape_interval: 15s
  evaluation_interval: 15s
  external_labels:
    cluster: 'crepto-ai'
    environment: 'production'

# Alertmanager configuration
alerting:
  alertmanagers:
    - static_configs:
        - targets:
            - alertmanager:9093

# Load alert rules
rule_files:
  - '/etc/prometheus/rules/creptoai-alert-rules.yml'

# Scrape configurations
scrape_configs:
  # Prometheus itself
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']
        labels:
          service: 'prometheus'
          app: 'crepto-ai'

  # Alertmanager
  - job_name: 'alertmanager'
    static_configs:
      - targets: ['alertmanager:9093']
        labels:
          service: 'alertmanager'
          app: 'crepto-ai'

  # Node Exporter - System metrics
  - job_name: 'node-exporter'
    static_configs:
      - targets: ['node-exporter:9100']
        labels:
          service: 'node-exporter'
          app: 'crepto-ai'

  # cAdvisor - Container metrics
  - job_name: 'cadvisor'
    static_configs:
      - targets: ['cadvisor:8080']
        labels:
          service: 'cadvisor'
          app: 'crepto-ai'

  # Backend API - FastAPI metrics
  - job_name: 'backend-api'
    metrics_path: '/metrics'
    static_configs:
      - targets: ['host.docker.internal:8000']
        labels:
          service: 'backend-api'
          app: 'crepto-ai'
          tier: 'backend'
    # Retry if backend is temporarily down
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: host.docker.internal:8000

  # Proxy Server - Node.js metrics
  - job_name: 'proxy-server'
    metrics_path: '/metrics'
    static_configs:
      - targets: ['host.docker.internal:3002']
        labels:
          service: 'proxy-server'
          app: 'crepto-ai'
          tier: 'proxy'
    # Scrape interval for proxy
    scrape_interval: 30s

  # Frontend - Nginx metrics (if exposed)
  - job_name: 'frontend'
    static_configs:
      - targets: ['host.docker.internal:5173']
        labels:
          service: 'frontend'
          app: 'crepto-ai'
          tier: 'frontend'
    # Only scrape if metrics endpoint exists
    metric_relabel_configs:
      - source_labels: [__name__]
        regex: 'up'
        action: keep
